@page "/task-detail/{id}"

@using Microsoft.AspNetCore.Authorization
@using TodoListBlazorWasm.Components
@using TodoListBlazorWasm.Models.Responses
@using TodoListBlazorWasm.Services
@using YANLib

@inject IConfiguration Configuration
@inject ITaskService TaskService

@attribute [Authorize]

<PageTitle>Task details</PageTitle>
<h1>Task details</h1>

@if (Task is null)
{
    <LoadingIndicator />
}
else
{
    <h3 class="mt-4">@Task.Name</h3>

    <table class="table mt-3">
        <tr>
            <td>Priority</td>

            <td>
                <PriorityLabel Priority="Task.Priority" />
            </td>
        </tr>

        <tr>
            <td>Assignee</td>
            <td>@(Task.Assignee is null ? "N/A" : $"{Task.Assignee.FirstName} {Task.Assignee.LastName}")</td>
        </tr>

        <tr>
            <td>Status</td>

            <td>
                <StatusLabel Status="Task.Status" />
            </td>
        </tr>

        <tr>
            <td>Created At</td>
            <td>@Task.CreatedAt.ToString(Configuration["DateTimeFormat"])</td>
        </tr>

        <tr>
            <td>Updated At</td>
            <td>@(Task.UpdatedAt.HasValue ? Task.UpdatedAt.Value.ToString(Configuration["DateTimeFormat"]) : "N/A")</td>
        </tr>
    </table>
}

@code {
    protected override async Task OnInitializedAsync()
    {
        if (Id.IsNotWhiteSpaceAndNull())
        {
            var ent = await TaskService.Get(Id);

            if (ent is null)
            {
                Task = new TaskResponse();
            }
            else
            {
                Task = ent;
            }
        }
    }

    [Parameter]
    public string? Id { get; set; }

    private TaskResponse? Task { get; set; }
}
