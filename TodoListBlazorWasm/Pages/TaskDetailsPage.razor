@page "/task-details/{id}"

@using TodoListBlazorWasm.Components;
@using TodoListBlazorWasm.Models.Responses;
@using TodoListBlazorWasm.Services;
@using YANLib;

@inject ITaskService TaskService;

<PageTitle>Task details</PageTitle>

<h1>Task details</h1>

@if (Task is null)
{
    <LoadingIndicator />
}
else
{
    <h3>Task @Task.Name</h3>

    <table class="table">
        <tr>
            <td>Name</td>
            <td>@Task.Name</td>
        </tr>

        <tr>
            <td>Priority</td>
            <td>@Task.Priority</td>
        </tr>

        <tr>
            <td>Assignee</td>
            <td>@(Task.Assignee is null ? string.Empty : $"{Task.Assignee.FirstName} {Task.Assignee.LastName}")</td>
        </tr>

        <tr>
            <td>Status</td>
            <td>@Task.Status</td>
        </tr>

        <tr>
            <td>Created At</td>
            <td>@Task.CreatedAt.ToString("dd/MM/yyyy HH:mm")</td>
        </tr>

        <tr>
            <td>Updated At</td>
            <td>@(Task.UpdatedAt.HasValue ? Task.UpdatedAt.Value.ToString("dd/MM/yyyy HH:mm") : string.Empty)</td>
        </tr>
    </table>
}

@code {
    protected override async Task OnInitializedAsync()
    {
        if (Id!.IsNotWhiteSpaceAndNull())
        {
            Task = await TaskService.Get(Id!);
        }
    }

    [Parameter]
    public string? Id { get; set; }

    private TaskResponse? Task { get; set; }
}
